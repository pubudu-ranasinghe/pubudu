---
import "../styles/global.css";
import ThemeToggle from "../components/ThemeToggle.astro";

export interface Props {
  title?: string;
  description?: string;
  keywords?: string;
  image?: string;
  type?: "website" | "article";
  publishDate?: Date;
  author?: string;
}

const {
  title = "Pubudu Ranasinghe",
  description = "Software Engineer based in Sri Lanka, passionate about tech, building products, and experimenting with design & photography.",
  keywords = "software engineer, web development, Sri Lanka, tech, photography, design",
  image = new URL("/og-image.png", Astro.site).href,
  type = "website",
  publishDate,
  author = "Pubudu Ranasinghe",
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="canonical" href={Astro.url.href} />
    <meta name="generator" content={Astro.generator} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />
    {
      type === "article" && publishDate && (
        <>
          <meta
            property="article:published_time"
            content={publishDate.toISOString()}
          />
          <meta property="article:author" content={author} />
        </>
      )
    }

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={image} />

    <title>{title}</title>

    <!-- Theme initialization script - runs before page render to prevent FOUC -->
    <script is:inline>
      (function () {
        function getThemePreference() {
          if (typeof localStorage !== "undefined") {
            return localStorage.getItem("theme-preference");
          }
          return null;
        }

        function getSystemTheme() {
          if (typeof window !== "undefined" && window.matchMedia) {
            return window.matchMedia("(prefers-color-scheme: dark)").matches
              ? "dark"
              : "light";
          }
          return "light";
        }

        const stored = getThemePreference();
        const theme = stored || getSystemTheme();
        document.documentElement.setAttribute("data-theme", theme);
      })();
    </script>

    <!-- Structured Data (JSON-LD) -->
    {
      type === "website" ? (
        <script
          type="application/ld+json"
          set:html={JSON.stringify({
            "@context": "https://schema.org",
            "@type": "Person",
            name: "Pubudu Ranasinghe",
            jobTitle: "Software Engineer",
            url: Astro.site?.href,
            sameAs: [
              "https://github.com/pubudu-ranasinghe",
              "https://www.linkedin.com/in/pubuduranasinghe/",
              "https://www.facebook.com/pubudutr",
              "https://www.instagram.com/pubudu_ranasinghe/",
            ],
            worksFor: {
              "@type": "Organization",
              name: "Nagarro",
            },
            address: {
              "@type": "PostalAddress",
              addressCountry: "LK",
              addressLocality: "Sri Lanka",
            },
          })}
        />
      ) : (
        <script
          type="application/ld+json"
          set:html={JSON.stringify({
            "@context": "https://schema.org",
            "@type": "BlogPosting",
            headline: title,
            description: description,
            image: image,
            datePublished: publishDate?.toISOString(),
            author: {
              "@type": "Person",
              name: author,
              url: Astro.site?.href,
            },
            publisher: {
              "@type": "Person",
              name: "Pubudu Ranasinghe",
            },
            mainEntityOfPage: {
              "@type": "WebPage",
              "@id": Astro.url.href,
            },
          })}
        />
      )
    }

    <script
      defer
      src="https://cloud.umami.is/script.js"
      data-website-id="0c8d67f9-e696-40e7-aead-d71b63c8622d"></script>
  </head>
  <body>
    <ThemeToggle />
    <slot />
  </body>
</html>

<style is:global>
  html,
  body {
    margin: 0;
    width: 100%;
    min-height: 100%;
    font-family:
      "Geist Sans", Inter, Roboto, "Helvetica Neue", "Arial Nova",
      "Nimbus Sans", Arial, sans-serif;
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-base);
    line-height: var(--line-height-base);
    letter-spacing: var(--letter-spacing-base);
    color: var(--color-text-primary);
    background-color: var(--color-bg);
    text-rendering: optimizelegibility;
    -webkit-font-smoothing: antialiased;
  }

  @font-face {
    font-family: "Geist Sans";
    src: url("/fonts/Geist[wght].woff2") format("woff2-variations");
    font-weight: 400, 500;
    font-stretch: 75% 125%;
    font-style: normal;
    font-display: swap;
  }

  :root {
    /* Typography */
    --font-size-base: 16px;
    --font-size-2: 18px;
    --line-height-base: 28px;
    --font-weight-base: 400;
    --font-weight-medium: 500;
    --letter-spacing-base: normal;

    /* Color Palette */
    --stone-50: oklch(98.5% 0.001 106.423);
    --stone-100: oklch(97% 0.001 106.424);
    --stone-200: oklch(92.3% 0.003 48.717);
    --stone-500: oklch(55.3% 0.013 58.071);
    --stone-700: oklch(37.4% 0.01 67.558);
    --stone-800: oklch(26.8% 0.007 34.298);
    --stone-900: oklch(15% 0.002 264.705);
    --stone-950: oklch(10% 0.002 264.705);
    --accent-400: oklch(79.5% 0.184 86.047);
    --gray-900: oklch(51% 0 0);

    /* Semantic Variables - Light Theme */
    --color-bg: var(--stone-50);
    --color-surface: var(--stone-100);
    --color-border: var(--stone-200);
    --color-text-primary: var(--stone-500);
    --color-text-primary-extra: var(--stone-900);
    --color-text-secondary: var(--stone-700);
    --color-text-emphasis: var(--stone-800);

    /* Layout */
    --container-padding-horizontal: 24px;
    --hero-padding-vertical: 72px;
    --image-height: 450px;
    --max-width-content: 600px;
    --border-radius-base: 8px;
  }

  /* Dark theme - applied via media query OR data-theme attribute */
  @media (prefers-color-scheme: dark) {
    :root:not([data-theme="light"]) {
      /* Semantic Variables - Dark Theme */
      --color-bg: var(--stone-900);
      --color-surface: var(--stone-800);
      --color-border: var(--stone-700);
      --color-text-primary: var(--stone-50);
      --color-text-primary-extra: var(--stone-50);
      --color-text-secondary: var(--accent-400);
      --color-text-emphasis: var(--stone-50);
    }
  }

  /* Manual dark theme override */
  :root[data-theme="dark"] {
    /* Semantic Variables - Dark Theme */
    --color-bg: var(--stone-900);
    --color-surface: var(--stone-800);
    --color-border: var(--stone-700);
    --color-text-primary: var(--stone-50);
    --color-text-primary-extra: var(--stone-50);
    --color-text-secondary: var(--accent-400);
    --color-text-emphasis: var(--stone-50);
  }

  /* Manual light theme override */
  :root[data-theme="light"] {
    /* Semantic Variables - Light Theme (same as default) */
    --color-bg: var(--stone-50);
    --color-surface: var(--stone-100);
    --color-border: var(--stone-200);
    --color-text-primary: var(--stone-500);
    --color-text-primary-extra: var(--stone-900);
    --color-text-secondary: var(--stone-700);
    --color-text-emphasis: var(--stone-800);
  }

  /* .container {
    max-width: var(--max-width-content);
    padding-left: var(--container-padding-horizontal);
    padding-right: var(--container-padding-horizontal);
    margin: 0 auto;
  } */

  p {
    margin: 0 0 16px 0;
  }

  .ligatures {
    font-variant-ligatures: common-ligatures;
    font-feature-settings:
      "ss01" 1,
      "ss04" 1,
      "ss05" 1,
      "ss06" 1,
      "ss07" 1,
      "ss08" 1;
  }
</style>
