---
import { getCollection, type CollectionEntry } from "astro:content";

type BlogEntry = CollectionEntry<"blog">;

// Fetch published blog posts, sorted by date (newest first)
const posts = await getCollection("blog", ({ data }: BlogEntry) => {
  return data.draft !== true;
});

const sortedPosts = posts.sort(
  (a: BlogEntry, b: BlogEntry) => 
    b.data.publishDate.getTime() - a.data.publishDate.getTime()
);
---

<section class="writing container">
  <h2>Writing</h2>
  <ul>
    {
      sortedPosts.map((post: BlogEntry) => (
        <li>
          <a href={`/${post.slug}`}>
            {post.data.title}
          </a>
        </li>
      ))
    }
  </ul>
</section>

<style>
  .writing {
    padding-bottom: var(--hero-padding-vertical);
  }

  .writing h2 {
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-medium);
    color: var(--color-text-secondary);
    line-height: var(--line-height-base);
  }

  .writing ul {
    list-style: none;
    padding: 0;
    margin: 0;
    max-width: var(--max-width-content);
  }

  .writing li {
    margin-bottom: 16px;
  }

  .writing li:last-child {
    margin-bottom: 0;
  }

  .writing a {
    color: var(--color-text-primary);
    font-size: var(--font-size-base);
    line-height: var(--line-height-base);
    text-decoration: none;
    transition-duration: 0.3s;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }

  .writing a:hover {
    color: var(--color-text-emphasis);
  }

  .writing sup {
    font-size: 0.6em;
    color: var(--color-text-secondary);
  }
</style>
