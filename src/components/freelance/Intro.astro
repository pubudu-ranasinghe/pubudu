---
import { Image } from "astro:assets";
import background from "../../assets/media.svg";
import Header from "../Header.astro";
// import SocialLinks from "./SocialLinks.astro";

export interface Props {
  name?: string;
  title?: string;
  description?: string;
}

const { name = "Pubudu Ranasinghe", title = "Software Engineer" } = Astro.props;
---

<article class="">
  <main class="ligatures inter container flex flex-col justify-center">
    <Header name={name} title={title} compact />
    <section class="bio py-10 antialiased">
      <h1
        class="mb-6 max-w-2xl text-6xl leading-14 font-semibold tracking-tight text-stone-900 dark:text-stone-100"
      >
        Modern software. Built with clarity.
      </h1>
      <p class="max-w-2xl text-xl text-stone-600 dark:text-stone-300">
        I help startups and agencies design, develop, and scale reliable web
        platforms using React, Next.js, and AWS.
      </p>
      <!-- <button
            type="submit"
            class="group px-8 py-4 bg-emerald-500 text-white rounded font-medium hover:bg-emerald-600 transition-all flex items-center justify-center gap-2 shadow-lg hover:shadow-xl hover:scale-105 active:scale-95"
        >
            
                <span>Let's Work Together</span>
                <!-- <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-arrow-right-icon lucide-arrow-right"><path d="M5 12h14"/><path d="m12 5 7 7-7 7"/></svg> -->
      <!-- <ArrowRight className="w-5 h-5 group-hover:translate-x-1 transition-transform" /> -->
      <!-- </button> -->
    </section>
    <section
      class="flex items-center gap-8 rounded-2xl bg-stone-100 p-6 dark:bg-stone-900"
    >
      <form
        id="contact-form"
        class="flex flex-1 flex-col gap-4"
        action="https://formspree.io/f/mrbynvvl"
        method="POST"
      >
        <div id="form-content">
          <h2
            class="text-4xl font-semibold tracking-tight text-stone-900 dark:text-stone-100"
          >
            Get in touch
          </h2>
          <p class="mt-4 text-lg text-stone-600 dark:text-stone-300">
            Ready to work together? Let's discuss your project and how I can
            help.
          </p>
          <input
            type="email"
            name="email"
            placeholder="your@email.com"
            required
            class="mt-4 w-full rounded-xl border border-stone-200 bg-stone-50 px-4 py-3 text-stone-900 placeholder-stone-400 focus:ring-2 focus:ring-amber-500 focus:outline-none dark:border-stone-800 dark:bg-stone-800 dark:text-stone-100 dark:placeholder-stone-600"
          />
          <button
            type="submit"
            class="group mt-4 flex w-fit cursor-pointer items-center justify-center gap-2 rounded-xl bg-amber-500 px-6 py-3 font-medium text-white shadow-lg transition-all hover:bg-amber-600 hover:shadow-xl"
          >
            <span>Let's Work Together</span>
          </button>
        </div>
        <div id="thank-you-message" class="hidden">
          <h2
            class="text-4xl font-semibold tracking-tight text-stone-900 dark:text-stone-100"
          >
            Thank you!
          </h2>
          <p class="mt-4 text-lg text-stone-600 dark:text-stone-300">
            I've received your message and will get back to you soon.
          </p>
        </div>
      </form>
      <div class="flex-1">
        <Image
          src={background}
          alt={"Contact section background"}
          loading="eager"
          decoding="sync"
          quality={95}
          class="h-full w-full rounded-2xl object-cover"
        />
      </div>
    </section>
  </main>
</article>

<script>
  const form = document.getElementById("contact-form") as HTMLFormElement;
  const formContent = document.getElementById("form-content");
  const thankYouMessage = document.getElementById("thank-you-message");

  form?.addEventListener("submit", async (e) => {
    e.preventDefault();

    const formData = new FormData(form);

    try {
      const response = await fetch(form.action, {
        method: "POST",
        body: formData,
        headers: {
          Accept: "application/json",
        },
      });

      if (response.ok) {
        formContent?.classList.add("hidden");
        thankYouMessage?.classList.remove("hidden");
      }
    } catch (error) {
      console.error("Error submitting form:", error);
    }
  });
</script>
