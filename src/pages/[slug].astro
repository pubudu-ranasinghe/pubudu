---
import { getCollection, type CollectionEntry } from "astro:content";
import BlogLayout from "../layouts/BlogLayout.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection(
    "blog",
    ({ data }: CollectionEntry<"blog">) => {
      return data.draft !== true;
    },
  );

  // Sort posts by publish date (newest first)
  const sortedPosts = blogEntries.sort(
    (a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf(),
  );

  return sortedPosts.map((entry: CollectionEntry<"blog">, index: number) => {
    // Previous post is older (next in array), next post is newer (previous in array)
    const prevPost =
      index < sortedPosts.length - 1 ? sortedPosts[index + 1] : null;
    const nextPost = index > 0 ? sortedPosts[index - 1] : null;

    return {
      params: { slug: entry.slug },
      props: {
        entry,
        prevPost,
        nextPost,
      },
    };
  });
}

interface Props {
  entry: CollectionEntry<"blog">;
  prevPost: CollectionEntry<"blog"> | null;
  nextPost: CollectionEntry<"blog"> | null;
}

const { entry, prevPost, nextPost } = Astro.props;
const { Content } = await entry.render();
---

<BlogLayout
  title={entry.data.title}
  description={entry.data.description}
  publishDate={entry.data.publishDate}
  tags={entry.data.tags}
  prevPost={prevPost}
  nextPost={nextPost}
>
  <Content />
</BlogLayout>
